import i18next from 'i18next'

const messageMap: Record<string, string> = {
  'Invalid email': 'backendError.invalidEmail',

  'First name is required': 'backendError.firstNameRequired',
  'First name cannot exceed 100 characters': 'backendError.firstNameMaxLength',
  'Last name is required': 'backendError.lastNameRequired',
  'Last name cannot exceed 100 characters': 'backendError.lastNameMaxLength',
  'Username is required and must be at least 3 characters long': 'backendError.usernameRequired',
  'Username cannot exceed 20 characters': 'backendError.usernameMaxLength',
  'User name should starting with a letter, 3-20 characters and can contain letters, numbers and underscores':
    'backendError.invalidUsername',
  'Invalid email address': 'backendError.invalidEmail',
  'Password must be at least 8 characters long': 'backendError.passwordMinLength',
  'avatar must more than 1 character': 'backendError.avatarMinLength',
  'Phone must be a string with 10 to 15 digits': 'backendError.invalidPhone',
  'Date of birth must be a valid date (YYYY-MM-DD)': 'backendError.invalidDob',
  'Email is required': 'backendError.emailRequired',
  'Password is required': 'backendError.passwordRequired',

  'String must contain at most 100 character(s)': 'backendError.fullNameMaxLength',
  'Phone must contain at most 100 character(s)': 'backendError.phoneMaxLength',
  'District must contain at most 100 character(s)': 'backendError.districtMaxLength',
  'Ward must contain at most 100 character(s)': 'backendError.wardMaxLength',
  'Province must contain at most 255 character(s)': 'backendError.provinceMaxLength',
  'Invalid enum value. Expected AddressEnum': 'backendError.invalidType',

  'Start time must be a valid date string': 'backendError.invalidStartTime',
  'End time must be a valid date string': 'backendError.invalidEndTime',
  'Number must be greater than or equal to 0': 'backendError.totalPriceNonNegative',

  'Account not found': 'backendError.accountNotFound',
  'Updated by account not found': 'backendError.updatedByAccountNotFound',
  'Email already exists!': 'backendError.emailAlreadyExists',
  'Username already exists!': 'backendError.usernameAlreadyExists',
  'Invalid role provided': 'backendError.invalidRoleProvided',
  'Certificate is only available for role CONSULTANT and KOL': 'backendError.certificateNotAllowed',
  'Consultant not found': 'backendError.consultantNotFound',
  'Brand not found': 'backendError.brandNotFound',
  'Account has been banned due to exceeding the approved reports limit': 'backendError.exceededApprovedReportsLimit',

  'Address not found': 'backendError.addressNotFound',
  'Should be at least one default address': 'backendError.atLeastOneDefaultAddress',

  'Email is not verified': 'backendError.emailNotVerified',
  'Invalid password': 'backendError.invalidPassword',
  'User must login by another way not using password': 'backendError.loginMethodNotAllowed',

  'Blog Not Existed!': 'backendError.blogNotExisted',
  'Blog tag already Existed': 'backendError.blogTagAlreadyExisted',

  'Booking not found': 'backendError.bookingNotFound',
  'Only reviewer can note result': 'backendError.onlyReviewerCanNoteResult',
  'Slot has been booked': 'backendError.slotBooked',
  'BrandId required': 'backendError.brandIdRequired',
  'ConsultantServiceId required': 'backendError.consultantServiceIdRequired',
  'ConsultantService not found': 'backendError.consultantServiceNotFound',
  'Slot is required': 'backendError.slotRequired',
  'You cannot complete the booking because the report has not been completed yet.':
    'backendError.cannotCompleteBooking',
  'Can not cancelled booking in status: ': 'backendError.cannotCancelBooking',
  'Dont have wallet': 'backendError.dontHaveWallet',
  'Please select active product': 'backendError.activeProductRequired',
  'Product not found': 'backendError.productNotFound',
  'Only apply for consultant or operator': 'backendError.onlyConsultantOrOperator',
  'Overlap time slot': 'backendError.overlapTimeSlot',
  'You have already booked a slot. Please wait for process': 'backendError.alreadyBookedSlot',
  'Booking cancelled successfully': 'backendError.bookingCancelledSuccessfully',
  'Booking service status updated successfully': 'backendError.bookingStatusUpdatedSuccessfully',

  'Classification not found': 'backendError.classificationNotFound',
  'Can not add invalid Product': 'backendError.invalidProduct',
  'Quantity is not enough': 'backendError.quantityNotEnough',
  'Group Buying invalid': 'backendError.groupBuyingInvalid',
  'Livestream invalid': 'backendError.livestreamInvalid',
  'Cart Item not found': 'backendError.cartItemNotFound',
  'Invalid or empty itemIds array': 'backendError.invalidOrEmptyItemIds',
  'No items found for the provided IDs': 'backendError.noItemsFoundForIds',
  'Account ID is required': 'backendError.accountIdRequired',
  'No items found in the cart for the given account': 'backendError.noItemsInCart',

  'Category already Existed': 'backendError.categoryAlreadyExisted',
  'Parent category not found': 'backendError.parentCategoryNotFound',
  'A category cannot have more than 4 levels of subcategories': 'backendError.maxCategoryLevelExceeded',
  'Category not found.': 'backendError.categoryNotFound',
  'New parent category not found.': 'backendError.newParentCategoryNotFound',

  'Consultant service not found.': 'backendError.consultantServiceNotFound',
  'Booking Form not found.': 'backendError.bookingFormNotFound',
  'System service not found or inactive.': 'backendError.systemServiceNotFoundOrInactive',
  'Cannot update status.': 'backendError.invalidStatusUpdate',
  'No active services using this form found.': 'backendError.activeServicesUsingFormNotFound',
  'Question not found.': 'backendError.questionNotFound',
  'Image not found.': 'backendError.imageNotFound',

  'Consultation Criteria not found': 'backendError.consultationCriteriaNotFound',
  'Consultation Criteria Section not found': 'backendError.consultationCriteriaSectionNotFound',
  'Failed to create Consultation Criteria.': 'backendError.criteriaCreationFailed',
  'Failed to update Consultation Criteria.': 'backendError.criteriaUpdateFailed',
  'Failed to update Consultation Criteria Section.': 'backendError.criteriaSectionUpdateFailed',

  'Section not found': 'backendError.sectionNotFound',
  'Livestream not found': 'backendError.livestreamNotFound',
  'Invalid livestream status': 'backendError.invalidLivestreamStatus',

  'Product invalid: Product not found': 'backendError.invalidProduct',
  'Product invalid: Product INACTIVE': 'backendError.invalidProduct',
  'Product invalid: Product BANNED': 'backendError.invalidProduct',
  'Product invalid: Product UN_PUBLISHED': 'backendError.invalidProduct',
  'Product classification must have at least one quantity.': 'backendError.classificationQuantityRequired',
  'sku is required': 'backendError.skuRequired',
  'sku of classification already exists': 'backendError.skuAlreadyExists',
  'Invalid datetime string': 'backendError.invalidDatetime',
  'Start time must be earlier than end time': 'backendError.invalidTimeRange',
  'The time range overlaps with an existing pre-order event': 'backendError.overlappingPreOrderEvent',
  'The time range overlaps with an existing discount event': 'backendError.overlappingDiscountEvent',
  'Pre-order Product not found': 'backendError.preOrderProductNotFound',

  'Category not found': 'backendError.categoryNotFound',
  'sku already exists': 'backendError.skuAlreadyExists',
  'title of classification already exists': 'backendError.classificationTitleAlreadyExists',
  'Invalid sortBy': 'backendError.invalidSortBy',
  'Invalid product status': 'backendError.invalidProductStatus',

  'PreOrderProduct not found': 'backendError.preOrderProductNotFound',
  'ProductDiscount not found': 'backendError.productDiscountNotFound',
  'SKU already exists in the brand': 'backendError.skuAlreadyExists',
  'Classification not found!': 'backendError.classificationNotFound',
  'Classification invalid!': 'backendError.classificationInvalid',
  'Classification quantity must be greater than 0!': 'backendError.classificationQuantityInvalid',
  'Invalid classification quantity: Quantity should be smaller than the current stock':
    'backendError.invalidClassificationQuantity',
  'The Product is BANNED!': 'backendError.productStatusInvalid',
  'The Product is INACTIVE!': 'backendError.productStatusInvalid',
  'The Product is UN_PUBLISHED!': 'backendError.productStatusInvalid',

  'Original classification not found': 'backendError.originalClassificationNotFound',
  'Invalid filter options': 'backendError.invalidFilterOptions',

  'Question not found': 'backendError.questionNotFound',
  'Failed to delete question': 'backendError.deleteQuestionFailed',
  'Failed to update order index for questions': 'backendError.updateOrderIndexFailed',
  'Failed to delete image associated with the question': 'backendError.imageDeleteFailed',

  'System service not found.': 'backendError.systemServiceNotFound',
  'Service already Existed': 'backendError.serviceAlreadyExisted',
  'No active services using this criteria found.': 'backendError.activeServicesUsingCriteriaNotFound',
  'Failed to update image associated with the system service': 'backendError.imageUpdateFailed',
  'Failed to update consultation criteria section.': 'backendError.criteriaSectionUpdateFailed',

  'Invalid status value': 'backendError.invalidStatusValue',

  "Account number is required": "backendError.invalidBankAccount",
  "Account name is required": "backendError.invalidAccountName",
  "Bank name is required": "backendError.invalidBankName",
  "Invalid brand ID": "backendError.invalidBrandId",
  "Invalid slot ID": "backendError.invalidslotId",
  "Name is required": "backendError.nameRequired",
  "Name cannot exceed 255 characters": "backendError.nameMaxLength",
  "Logo cannot exceed 255 characters": "backendError.logoMaxLength",
  "Document is required": "backendError.documentRequired",
  "Document cannot exceed 255 characters": "backendError.documentMaxLength",
  "Address cannot exceed 255 characters": "backendError.adddressMaxLength",
  "Business tax code cannot exceed 100 characters": "backendError.businessTaxCodeMaxLength",
  "Business tax code is required": "backendError.businessTaxCodeRequired",
  "Business registration code is required": "backendError.businessRegistrationCodeRequired",
  "Business registration code cannot exceed 100 characters": "backendError.businessRegistrationCodeMaxLength",
  "Establishment date cannot exceed 255 characters": "backendError.establishmentDateMaxLength",
  "Province is required": "backendError.provinceRequired",
  "District is required": "backendError.districtRequired",
  "Ward is required": "backendError.wardRequired",
  "Business registration address cannot exceed 255 characters": "backendError.businessRegistrationAddressMaxLength",
  "Rating must be between 1 and 5": "backendError.ratingMinMaxLength",
  "Rating must be an integer": "backendError.ratingInteger",
  "Content must be between 25 and 500 chars": "backendError.contentMinMaxLength",
  "Invalid order detail ID": "backendError.invalidOrderDetailId",
  "End time must be greater than the current time": "backendError.endTimeGreaterThanCurrentTime",
  "Invalid group product ID": "backendError.invalidGroupProductId",
  "Max buy amount each person must be an integer": "backendError.maxBuyAmountEachPersonInteger",
  "Max buy amount each person must be a positive integer": "backendError.maxBuyAmountEachPersonPositive",
  "Invalid product ID": "backendError.invalidProductId",
  "Product IDs cannot be empty": "backendError.nonemptyProductIds",
  "Criterias cannot be empty": "backendError.nonemptyCriterias",
  "Threshold must be an integer": "backendError.thresholdInteger",
  "Threshold must be a positive integer": "backendError.thresholdPositive",
  "Invalid event ID": "backendError.invalidEventId",
  "Invalid order type": "backendError.invalidOrderType",
  "Amount must be positive": "backendError.amountPositive",
  "Start time is required": "backendError.startTimeRequired",
  "End time is required": "backendError.endTimeRequired",
  "Product ID is required": "backendError.productRequired",
  "Price must be an integer": "backendError.priceInteger",
  "Price must be non-negative": "backendError.priceNonNegative",
  "Quantity must be an integer": "backendError.quantityInteger",
  "Quantity must be non-negative": "backendError.quantityNonNegative",
  "Order index must be an integer": "backendError.orderIndexInteger",
  "Order index must be non-negative": "backendError.orderIndexNonNegative",
  "Invalid assignee ID": "backendError.invalidAssigneeId",
  "Title must be at most 100 characters long": "backendError.titleMaxLength",
  "Invalid time format (HH:MM)": "backendError.startTimeRegex",
  "Invalid account ID": "backendError.invalidAccountId",
  "Code is required": "backendError.codeRequired",
  "Code cannot exceed 50 characters": "backendError.codeMaxLength",
  "Discount Value must be non-negative": "backendError.discountValueNonNegative",
  "Max Discount must be an integer": "backendError.maxDiscountInteger",
  "Max Discount must be non-negative": "backendError.maxDiscountNonNegative",
  "Min Order Value must be integer": "backendError.minOrderValueInteger",
  "Min Order Value must be non-negative": "backendError.minOrderValueNonNegative",
  "Amount must be an integer": "backendError.amountInteger",
  "Start time must be greater than the current time": "backendError.startTimeGreaterThanCurrentTime",
  "Balance must be non-negative": "backendError.balanceNonNegative",
  "Invalid bank account ID": "backendError.invalidBankAccountId",
  "Invalid related account ID": "backendError.invalidRelatedAccountId",

  "Bank account not found": "backendError.bankAccountNotFound",
  "Cannot unselect default bank account": "backendError.cannotUnselectDefaultBankAccount",
  "Cannot delete default bank account": "backendError.cannotDeleteDefaultBankAccount",
  //brand service
  "Assignee not found": "backendError.assigneeNotFound",
  "Status is already set to the current value": "backendError.statusAlreadySet",
  "Reason is required": "backendError.reasonRequired",
  "You can only update profile 3 times": "backendError.profileUpdateLimit",
  "Url required": "backendError.urlRequired",
  "Manager not found": "backendError.managerNotFound",
  "Name already exists": "backendError.nameAlreadyExists",
  "Can't update brand due to current status": "backendError.brandStatusInvalid",
  //fcm service
  "FCM token not found": "backendError.fcmTokenNotFound",
  "Failed to save notification to Firestore": "backendError.firestoreSaveFailed",
  //feedback service
  "Feedback not found": "backendError.feedbackNotFound",
  "Rating is required": "backendError.ratingRequired",
  "Classification must be provided": "backendError.classificationRequired",
  "Invalid filter type": "backendError.invalidFilterType",
  "You are not allowed to create feedback for this booking": "backendError.feedbackNotAllowed",
  "This booking is not completed yet": "backendError.bookingNotCompleted",
  "You already created a feedback for this booking": "backendError.feedbackAlreadyExists",
  "Order detail not found": "backendError.orderDetailNotFound",
  "You are not allowed to create feedback for this order detail": "backendError.orderDetailNotAllowed",
  "This order is not completed yet": "backendError.orderDetailNotCompleted",
  "You already created a feedback for this order detail": "backendError.orderDetailAlreadyExists",
  "Completed status tracking not found": "backendError.completedStatusTrackingNotFound",
  "Time to feedback is expired": "backendError.feedbackTimeExpired",
  //file service
  "No files uploaded": "backendError.noFilesUploaded",
  "No URLs provided": "backendError.noUrlsProvided",
  //firebase auth service
  "Failed to generate authentication token": "backendError.tokenGenerationFailed",
  "Invalid authentication token": "backendError.invalidToken",
  "GroupBuying not found": "backendError.groupBuyingNotFound",
  "Only creator can start to end group buying": "backendError.onlyCreatorCanStartEndGroupBuying",
  "Group buying has ended": "backendError.groupBuyingEnded",
  "Can not start to end because there is under 5 minutes left": "backendError.groupBuyingUnder5Minutes",
  "Not enough orders to end group buying": "backendError.groupBuyingNotEnoughOrders",
  "Order status is not valid": "backendError.orderStatusNotValid",
  "Total quantity exceeds the maximum allowed per person": "backendError.totalQuantityExceedsMax",
  "Product chosen is not available in this group": "backendError.productNotAvailableInGroupBuying",
  "Product is out of stock": "backendError.productOutOfStock",
  "Group buying is not active": "backendError.groupBuyingNotActive",
  "Only order once in each groupBuying": "backendError.onlyOrderOnceInGroupBuying",
  "Wallet balance is not enough": "backendError.walletBalanceNotEnough",
  "Only end active group buying": "backendError.onlyEndActiveGroupBuying",
  //group product service
  "Group product not found": "backendError.groupProductNotFound",
  "Group product is in event": "backendError.groupProductInEvent",
  "Group product is inactive": "backendError.groupProductInactive",
  "End time must after current time": "backendError.endTimeAfterCurrentTime",
  "Only update when status is Inactive": "backendError.onlyUpdateWhenInactive",
  "Some products not found": "backendError.someProductsNotFound",
  "Voucher code already exists": "backendError.voucherCodeAlreadyExists",
  "Voucher: The start time cannot be after the end time": "backendError.voucherStartTimeAfterEndTime",
  //order service
  "Event not found": "backendError.eventNotFound",
  "You dont have permission to access this resource": "backendError.permissionDenied",
  "Order not found": "backendError.orderNotFound",
  "Can not update payment method for child order": "backendError.cannotUpdatePaymentMethod",
  "Only update payment method for order TO PAY": "backendError.onlyUpdatePaymentMethod",
  "Only update payment method once": "backendError.onlyUpdatePaymentMethodOnce",
  "Please update different payment method": "backendError.differentPaymentMethod",
  "Can not take action on this order due to current status": "backendError.orderStatusInvalid",
  "Request not found": "backendError.requestNotFound",
  "Reason Rejected is required": "backendError.reasonRejectedRequired",
  "Can not request complaint due to current status": "backendError.complaintStatusInvalid",
  "Complaint time expired": "backendError.complaintTimeExpired",
  "Only request complaint once. Can not request anymore": "backendError.onlyRequestComplaintOnce",
  "You are not owner of this order": "backendError.notOwnerOfOrder",
  "Can not request refund due to current status": "backendError.refundStatusInvalid",
  "Refund time expired": "backendError.refundTimeExpired",
  "Only request refund once. Can not request anymore": "backendError.onlyRequestRefundOnce",
  "Can not cancel order due to current status": "backendError.orderCancelStatusInvalid",
  "Brand only receive order when current status is RETURNING": "backendError.orderStatusInvalidRETUNRING",
  "Can not update this status": "backendError.cannotUpdateStatus",
  "Wallet not found": "backendError.walletNotFound",
  "Can not cancel order to pay": "backendError.orderToPayCancel",
  "Order status is not TO_PAY": "backendError.orderStatusNotToPay",
  "Only request cancel once. Can not request anymore": "backendError.onlyRequestCancelOnce",
  "Can not request cancel due to current status": "backendError.cancelRequestStatusInvalid",
  "Product is not pre-order product": "backendError.productNotPreOrder",
  "Product is not active": "backendError.productNotActive",
  "Product not found in livestream": "backendError.productNotFoundInLivestream",
  //report service
  "Report not found": "backendError.reportNotFound",
  "Only assignee can note result": "backendError.onlyAssigneeCanNoteResult",
  "Report is done. Can not assign": "backendError.reportIsDone",
  "Booking id required": "backendError.bookingIdRequired",
  "Cannot create a report for booking due to current status": "backendError.bookingStatusInvalid",
  "Cannot create a report for this booking. The 2-day time limit has passed.": "backendError.bookingTimeLimit",
  "Only report once for this booking": "backendError.onlyReportOnce",
  "Order id required": "backendError.orderIdRequired",
  "Only report once for this order": "backendError.onlyReportOnce",
  "Role already Existed": "backendError.roleAlreadyExisted",
  //slot service
  "Some slots are not active": "backendError.someSlotsNotActive",
  //transaction service
  "Balance wallet not enough": "backendError.balanceWalletNotEnough",
  "Only pay for with wallet or bank transfer": "backendError.onlyPayWithWalletOrBankTransfer",
  "This booking can not be paid": "backendError.bookingCannotBePaid",
  "This transaction is not paid": "backendError.transactionNotPaid",
  "Invalid transaction code": "backendError.invalidTransactionCode",
  "Can not filter admin": "backendError.canNotFilterAdmin",
  "Invalid transaction type": "backendError.invalidTransactionType",
  "Brand manager not found": "backendError.brandManagerNotFound",
  //voucher service
  "Voucher not found": "backendError.voucherNotFound",
  "This voucher is not collectable": "backendError.voucherNotCollectable",
  "Voucher has already been collected": "backendError.voucherAlreadyCollected",
  "Shop voucher not found": "backendError.shopVoucherNotFound",
  "Shop voucher has no brand": "backendError.shopVoucherNoBrand",
  "Shop voucher is not yet valid": "backendError.shopVoucherNotValid",
  "Shop voucher has expired or is not yet valid": "backendError.shopVoucherExpired",
  "Shop voucher is out of stock": "backendError.shopVoucherOutOfStock",
  "Shop voucher is not collectable": "backendError.shopVoucherNotCollectable",
  "Shop voucher has already been used": "backendError.shopVoucherAlreadyUsed",
  "Platform voucher not found": "backendError.platformVoucherNotFound",
  "This is not a platform voucher": "backendError.notPlatformVoucher",
  "Platform voucher is not yet valid": "backendError.platformVoucherNotValid",
  "Platform voucher has expired or is not yet valid": "backendError.platformVoucherExpired",
  "Platform voucher is out of stock": "backendError.platformVoucherOutOfStock",
  "Platform voucher is not collectable": "backendError.platformVoucherNotCollectable",
  "Platform voucher has already been used": "backendError.platformVoucherAlreadyUsed",
  "Minimum order value is not enough": "backendError.minOrderValueNotEnough",
  "The start time cannot be after the end time": "backendError.voucherStartTimeAfterEndTime",
  "When discount type is AMOUNT, discount value must be an integer": "backendError.discountValueInteger",
  "Code already exists": "backendError.codeAlreadyExists",
  "Apply product ids must not be empty": "backendError.applyProductIdsNotEmpty",
  "Cannot update a voucher that is already started": "backendError.cannotUpdateStartedVoucher",
  "Wallet already exists": "backendError.walletAlreadyExists",
  "Insufficient available balance": "backendError.insufficientAvailableBalance",
  "Withdrawal request not found": "backendError.withdrawalRequestNotFound",
  "You are not allowed to update this withdrawal request": "backendError.notAllowedToUpdateWithdrawalRequest",
  "Can not update this status when current is PENDING": "backendError.cannotUpdateStatusPending",
  "Can not update this status when current is APPROVED": "backendError.cannotUpdateStatusApproved",
  "Evidences are required": "backendError.evidencesRequired",
  "Can not update anymore due to current status": "backendError.cannotUpdateStatus",
  "You are not allowed to access this resource": "backendError.notAllowedToAccessResource",
}
export const translateError = (message: string) => i18next.t(messageMap[message] ?? message)
